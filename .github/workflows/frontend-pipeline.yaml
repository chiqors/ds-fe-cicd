name: Frontend Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies and build the app
      - name: Install dependencies and build
        run: |
          cd frontend
          npm install
          npm run build

      # SonarQube Analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          projectBaseDir: ./frontend
          args: >
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
            -Dsonar.sources=./src
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.ws.timeout=300

      # Build Docker image
      - name: Build Docker image
        run: |
          cd frontend
          docker build -t ds-fe .

      # Scan Docker image with Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ds-fe

      # Run Docker container
      - name: Run Docker container
        run: |
          docker run -d -p 8080:80 --name ds-fe-container ds-fe

      # Install k6
      - name: Setup K6
        uses: grafana/setup-k6-action@v1

      # Run load tests with k6
      - name: Run local k6 test
        uses: grafana/run-k6-action@v1
        with:
          path: frontend/load-test.js

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker tag ds-fe chiqors/ds-fe:latest
          docker push chiqors/ds-fe:latest

      # Simulate Kubernetes deployment
      - name: Deploy to Kubernetes
        run: echo "Deploy success"